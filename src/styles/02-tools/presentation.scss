// * ASPECT RATIO
// * apply aspect ratio to a container. By default the ratio will be  a square (1:1)
// ====================

// **
// * USAGE
// **
// .heading{
//     @include aspect-ratio(1/3);
// }
//
// .heading__inner{
//     @include aspect-ratio-inner();
// }
//
// .heading-block__title{
//     @include aspect-ratio-element();
// }

@mixin aspect-ratio($percent-height: 100%, $width: 100%) {
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
    box-sizing: border-box;
    display: block;
    position: relative;
    white-space: nowrap;
    width: $width;
    font-size: 0;

    &:before {
        content: '';
        display: inline-block;
        padding-bottom: $percent-height;
        vertical-align: middle;
        width: 0;
        height: 0;
    }
}

@mixin aspect-ratio-inner($width: 90%, $align: middle) {
    box-sizing: border-box;
    display: inline-block;
    vertical-align: $align;
    white-space: normal;
    width: $width;
}

@mixin aspect-ratio-item() {
    box-sizing: border-box;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    white-space: normal;
    width: 100%;
    height: 100%;
}

@mixin aspect-ratio-reset() {
    white-space: normal;

    &:before {
        padding-bottom: 0;
    }
}

@mixin aspect-ratio-update($percent-height) {
    &:before {
        padding-bottom: $percent-height;
    }
}


// * VERTICAL ALIGNMENT
// * centers an element vertically, according to its outer container
// ====================

// **
// * USAGE
// **
// .outer {
//     @include vertically-centered($spacing);
// }
// 
// .outer__content {
//     @include vertically-centered-content();
// }

@mixin vertically-centered($padding: 0, $position: relative) {
    position: $position;
    display: block;
    font-size: 0;
    padding: $padding;

    &:before {
        content: "";
        width: 0;
        display: inline-block;
        vertical-align: middle;
        height: 100%;
    }
}

@mixin vertically-centered-content($width: 100%, $alignment: middle) {
    position: relative;
    z-index: 2;
    display: inline-block;
    vertical-align: $alignment;
    width: $width;
}

@function overlay($overlay){
    @if map-has-key($overlays, $overlay) {
        @return map-get($overlays, $overlay);  
    }
    
    @warn "The key #{$overlay} is not in the map â€™$overlays";
    @return null;
}

@mixin background-image($dimension: width, $cover-container: false) {
	position: absolute;
	display: block;
	white-space: normal;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	min-width: 101%;
	max-width: none;
	min-height: 101%;

	@if ($cover-container == true) {
		width: 100%;
		height: 100%;
	}
	@else {
        @if ($dimension == width) {
            width: 100%;
            height: auto;
        }
        @if ($dimension == height) {
            height: 100%;
		    width: auto;
        }
        @if ($dimension == both) {
            height: auto;
		    width: auto;
        }
	}

	.ie9 & {
		top: 0;
		left: 50%;
		margin: 0 0 0 -50%;
		min-width: 100%;
		max-width: none;
		min-height: 100%;
	}
}

@mixin overlay($overlay-index: 0) {
	position: absolute;
	display: block;
	top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    z-index: $overlay-index;
}

@mixin anchor(
	$link: currentColor,
	$hover: currentColor,
	$visit: currentColor,
	$active: currentColor,
	$underline-hover: true) {

	& {
	 color: $link;
	 text-decoration: none;
	 transition: color 0.2s ease-out;
   
	 @if($underline-hover == 'true'){
		&:focus,
		&:hover,
		&:active {
		text-decoration: underline;
		}
	}
   
	 &:focus,
	 &:hover {
	  color: $hover;
	 }
	 &:active {
	  color: $active;
	 }
	}
   }
   
   @mixin link(
	$font: copy,
	$font-family: $font-raleway,
	$font-weight: 300,
	$color: get-colour(link),
	$border-width: 1px,
	$border-style: solid,
	$border-color: transparent,
	$padding: 2px,
	$hover-color: get-colour(link-hover),
	$hover-border-color: get-colour(brand-blue),
	$animation: false
   ) {
	@include remove-appearance();
	@include typography($font);
	font-family: $font-family;
	font-weight: $font-weight;
	color: $color;
	border-bottom-width: $border-width;
	border-bottom-style: $border-style;
	border-bottom-color: $border-color;
	display: inline-block;
	padding-bottom: $padding;
	position: relative;
	transition: all 0.1s ease-in-out;
	text-decoration: none;
   
	&:hover,
	&:focus {
	 color: $hover-color;
	 border-bottom-color: $hover-border-color;
	}
   
	@if $animation {
	 &:after {
	  content: '';
	  width: 0;
	  position: absolute;
	  left: 0;
	  bottom: 0;
	  margin-bottom: -$border-width;
	  transition: all 350ms ease-out;
	  display: block;
	  border-bottom-width: $border-width;
	  border-bottom-color: $hover-color;
	 }
   
	 &:hover:after,
	 &:focus:after {
	  width: 100%;
	 }
   
	} @else {
	 display: initial;
	 padding-bottom: 0;
	}
   }

   @mixin side-heading(
    $top: 0,
    $left: 102%,
    $rotate: 90deg,
    $origin: center left,
    $width: 200px
){
    margin: 0;
    position: absolute;
    top: $top;
    left: $left;
    transform: rotate($rotate);
    transform-origin: $origin;
    min-width: $width;
}

@mixin underline-element() {
	display: inline-block;
	overflow: hidden;
	
	&:after{
        content: '';
        background-color: currentColor;
        display: block;
        height: 2px;
        width: 100%;
        bottom: 0;
        left: 0;
        transform: translateX(-100%);
        transition: transform 200ms cubic-bezier(0.55, 0.055, 0.675, 0.19);
	}
	
	&:hover{
        &:after{
            transform: translateX(0);
        }
    }
}

@mixin unordered-list-item(
  $list-font-size: copy,
  $list-color: get-var(app-text),
) {
  @include typography($list-font-size);

  position: relative;

  &:before {
    content: "";
    height: ($base-spacing * 0.7);
    width: ($base-spacing * 0.7);
    background-color: $list-color;
    border-radius: 100%;
    display: block;
    font-size: $base-spacing;
    position: absolute;
    left: $base-spacing;
    top: $base-spacing;
  }
}